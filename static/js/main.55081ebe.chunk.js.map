{"version":3,"sources":["components/task.jsx","components/column.jsx","components/task-details.jsx","components/context-menu.jsx","App.js","serviceWorker.js","index.js"],"names":["Task","props","handleClick","bind","e","this","displayTaskDetails","task","id","draggableId","index","provided","snapshot","onClick","className","isDragging","draggableProps","dragHandleProps","ref","innerRef","title","React","Component","Column","state","editTitle","columnTitle","column","deleteThisColumn","handleContext","onTitleChange","onTitleClick","onTitleSave","target","split","addCard","setState","event","value","preventDefault","changeColumnTitle","xPos","pageX","yPos","pageY","displayContext","deleteColumn","onContextMenu","onChange","aria-hidden","deleteColumnButton","droppableId","isDraggingOver","droppableProps","tasks","map","key","placeholder","TaskDetails","handleChange","handleDelete","content","closeModal","changeTaskData","deleteTask","style","position","top","bottom","left","right","backgroundColor","opacity","zIndex","transform","tabIndex","type","ContextMenu","splitId","thisId","moveTasksColumn","pos","columns","columnsList","property","children","push","item","App","onDragEnd","result","destination","source","newColumnOrder","columnOrder","splice","startColumn","finishColumn","startTaskIds","Array","from","taskIds","newStartColumn","finishTaskIds","newFinishColumn","newState","newTaskIds","newColumn","addColumn","showDeleteColumn","taskSerial","columnSerial","taskDetails","display","taskId","contextId","newTasks","JSON","parse","stringify","newTask","toast","success","col","newColumns","prevState","appState","localStorage","savedState","bool","newTaskDetails","deleteIndex","findIndex","error","originId","targetId","ToMoveTasks","targetTasks","concat","newTaskSerial","unshift","info","inContext","node","parentNode","deleteOrderIndex","deleteToTasks","i","length","warn","newColumnSerial","direction","columnId","autoClose","hideProgressBar","transition","Slide","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.55081ebe.chunk.js","sourcesContent":["import React from 'react';\nimport {Draggable} from 'react-beautiful-dnd'\n\nclass Task extends React.Component {\n  constructor(props){\n    super(props);\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClick(e){\n    this.props.displayTaskDetails(true, this.props.task.id)\n  }\n\n  render() {\n    return (\n      <Draggable draggableId={this.props.task.id} index={this.props.index}>\n        {(provided, snapshot) => (\n\n          <div\n            onClick={this.handleClick}\n            className={`\n              border\n              p-2\n              m-2\n              bg-light\n              card\n              ${snapshot.isDragging ? 'highlighted-task':''}`\n            }\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref = {provided.innerRef}\n          >\n\n            <div className=\"card-title\">\n              {this.props.task.title}\n            </div>\n\n          </div>\n\n        )}\n      </Draggable>\n\n    )}\n\n}\n\nexport default Task;\n","import React from 'react';\nimport Task from './task';\nimport {Droppable, Draggable} from 'react-beautiful-dnd'\n\nclass Column extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {editTitle: false, columnTitle: this.props.column.title}\n    this.handleClick = this.handleClick.bind(this);\n    this.deleteThisColumn = this.deleteThisColumn.bind(this);\n    this.handleContext = this.handleContext.bind(this);\n    this.onTitleChange=this.onTitleChange.bind(this);\n    this.onTitleClick=this.onTitleClick.bind(this);\n    this.onTitleSave=this.onTitleSave.bind(this);\n  }\n\n  handleClick(e){\n    const id = e.target.id\n    const splitId = id.split('-')\n    if(splitId[0] === \"column\"){\n      this.props.addCard(id)\n    }\n  }\n\n  onTitleClick(){\n    this.setState({editTitle:true});\n  }\n\n  onTitleChange(event){\n    this.setState({columnTitle:event.target.value})\n  }\n\n  onTitleSave(e){\n    e.preventDefault();\n    this.props.changeColumnTitle(this.props.column.id, this.state.columnTitle);\n    this.setState({ editTitle: false });\n  }\n\n  handleContext(e){\n    e.preventDefault()\n    const xPos = e.pageX\n    const yPos = e.pageY\n    this.props.displayContext(true, this.props.column.id, xPos, yPos)\n  }\n\n  deleteThisColumn(){\n    this.props.deleteColumn(this.props.column.id)\n  }\n\n  render() {\n    return (\n\n      <Draggable draggableId={this.props.column.id} index={this.props.index}>\n        {(provided, snapshot) => (\n          <div\n          className={`\n          col-min\n          card\n          h-80\n          w-25\n          m-1\n          ${snapshot.isDragging ? 'highlighted-task' : ''}\n          `}\n          onContextMenu={this.handleContext}\n          ref = {provided.innerRef}\n          {...provided.draggableProps}\n          >\n          <div className=\"w-100 border-bottom d-flex justify-content-between\"\n            {...provided.dragHandleProps}>\n            {this.state.editTitle?<>\n              <input value={this.state.columnTitle} onChange={this.onTitleChange}></input>\n              <button className=\"btn btn-success\" onClick={this.onTitleSave}>Save</button></>\n              :<h3 className=\"pt-2 pl-2\" onClick={this.onTitleClick}>{this.props.column.title}</h3>}\n            <div className={`m-2`}>\n              <button\n                id={this.props.column.id}\n                className={`btn btn-primary`}\n                onClick={this.handleClick}\n                >\n              <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\n              </button>\n                {this.props.deleteColumnButton &&\n                <button\n                className=\"btn btn-outline-danger ml-2\"\n                onClick={this.deleteThisColumn}>\n                  <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                </button>}\n            </div>\n          </div>\n          <Droppable droppableId={this.props.column.id}>\n            {(provided, snapshot)=>(\n              <div\n              className={`\n              tasklist\n              h-80\n              p-1\n              ${snapshot.isDraggingOver ? 'bg-info':''}\n              `}\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n              >\n                {this.props.tasks.map((task, index) => (\n                  <Task\n                  key={task.id}\n                  task={task}\n                  index={index}\n                  displayTaskDetails={this.props.displayTaskDetails}\n                  />\n                  ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </div>)}\n      </Draggable>\n    );\n  }\n}\n\nexport default Column;\n","import React from 'react'\n\nexport default class TaskDetails extends React.Component{\n  constructor(props){\n    super(props)\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.state = {\n      title: this.props.task.title,\n      content: this.props.task.content\n    }\n\n  }\n\n  handleClick(e){\n    if(e.target.id === 'overlay'){\n      this.closeModal()\n    }\n    if(e.target.id === 'save'){\n      this.props.changeTaskData(this.props.task.id, this.state.title, this.state.content)\n      this.closeModal()\n    }\n  }\n\n  handleDelete(){\n    this.closeModal();\n    this.props.deleteTask(this.props.task.id)\n  }\n\n  closeModal(){\n    this.props.displayTaskDetails(false, null)\n  }\n\n  handleChange(e){\n    const id = e.target.id\n    const value = e.target.value\n    this.setState({\n      [id]: value\n    })\n  }\n\n  render(){\n    return(\n      <div>\n        <div\n        id=\"overlay\"\n        onClick={this.handleClick}\n        style={{\n          position: 'fixed',\n          top: 0,\n          bottom: 0,\n          left: 0,\n          right: 0,\n          backgroundColor: 'black',\n          opacity: 0.5,\n          zIndex: 99\n        }}\n        >\n        </div>\n        <div style={{\n          position: 'fixed',\n          zIndex: 100,\n          top: '50%',\n          left: '50%',\n          right: '50%',\n          transform: 'translate(-50%, -50%)'\n        }}\n          className=\"card w-75\"\n          tabIndex=\"0\">\n          <div className=\"card-body\">\n            <h5>Title:</h5>\n              <input\n              type=\"text\"\n              id=\"title\"\n              className=\"form-control-lg mb-1\"\n              value={this.state.title}\n              onChange={this.handleChange}/>\n            <h5>Description:</h5>\n              <textarea\n                className=\"form-control text-dark mb-1\"\n                value={this.state.content}\n                placeholder=\"Type here to add a description\"\n                onChange={this.handleChange}\n                id=\"content\"\n              />\n              <button\n                id=\"save\"\n                onClick={this.handleClick}\n                className=\"btn btn-primary m-1\"\n              >\n                Save\n              </button>\n              <button\n                className=\"btn btn-danger m-1\"\n                onClick={this.handleDelete}\n                >\n                Delete\n              </button>\n          </div>\n        </div>\n      </div>\n      )\n  }\n\n}\n","import React from 'react'\n\nexport default class ContextMenu extends React.Component{\n  constructor(props){\n    super(props)\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClick(e){\n    const splitId=e.target.id.split('_')\n    const thisId = this.props.id\n    if(splitId[0] === 'moveto'){\n      this.props.moveTasksColumn(thisId, splitId[1])\n      this.props.displayContext(false, null, {})\n    }\n  }\n\n  render(){\n    const xPos = this.props.pos.xPos\n    const yPos = this.props.pos.yPos\n    const id = this.props.id\n    const columns = this.props.columns\n    const columnsList = []\n    for(const property in columns) {\n      const children = columns[property].title\n      if(columns[property] !== columns[id]){\n        columnsList.push(<li key={property} id={`moveto_${property}`} className=\"list-group-item\">{children}</li>)\n      }\n    }\n    return(\n      <div\n      onClick={this.handleClick}\n      id=\"context\"\n      className=\"card\"\n      style={{\n        position: \"fixed\",\n        top: yPos,\n        left: xPos,\n        zIndex: 55\n      }}\n      >\n        <div className=\"p-2\">\n          <h6>{columns[id].title}</h6>\n          <p>Move All Cards To:</p>\n          <ul className=\"list-group\">\n            {columnsList.map((item) => item)}\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport Column from './components/column'\nimport  { DragDropContext, Droppable} from 'react-beautiful-dnd'\nimport TaskDetails from './components/task-details'\nimport ContextMenu from './components/context-menu'\nimport { toast, ToastContainer, Slide } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.addCard = this.addCard.bind(this)\n    this.addColumn = this.addColumn.bind(this)\n    this.handleClick = this.handleClick.bind(this)\n    this.displayTaskDetails = this.displayTaskDetails.bind(this)\n    this.changeTaskData = this.changeTaskData.bind(this);\n    this.showDeleteColumn = this.showDeleteColumn.bind(this);\n    this.deleteColumn = this.deleteColumn.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.displayContext = this.displayContext.bind(this)\n    this.moveTasksColumn = this.moveTasksColumn.bind(this);\n    this.changeColumnTitle=this.changeColumnTitle.bind(this);\n    this.state={\n      taskSerial: 5,\n      tasks:{\n        'task-1': { id: 'task-1', title:\"Take out the garbage.\", content:\"\"},\n        'task-2': { id: 'task-2', title: \"Charge my phone.\", content: \"\" },\n        'task-3': { id: 'task-3', title: \"Complete the hackathon.\", content: \"\" },\n        'task-4': { id: 'task-4', title: \"Get a job.\", content: \"\" }\n      },\n      columnSerial: 4,\n      columns:{\n        'column-1':{\n          id: 'column-1',\n          title:\"To Do\",\n          taskIds: ['task-1','task-2','task-3','task-4']\n        },\n        'column-2': {\n          id: 'column-2',\n          title: \"In Progress\",\n          taskIds: []\n        },\n        'column-3': {\n          id: 'column-3',\n          title: \"Done\",\n          taskIds: []\n        }\n      },\n      columnOrder: ['column-1', 'column-2', 'column-3'],\n      taskDetails:{\n        display: false,\n        taskId: null\n      },\n      deleteColumnButton: false,\n      displayContext:{\n        display: false,\n        contextId: null,\n        pos:{}\n      }\n    }\n  }\n\n\n\n  changeTaskData(id, title, content){\n    const newTasks = JSON.parse(JSON.stringify(this.state.tasks))\n    const newTask = { id: id, title: title, content: content}\n    newTasks[id]=newTask;\n    this.setState({ tasks: newTasks }, () => toast.success(\"Task Updated!\"))\n\n  }\n  changeColumnTitle(col, title) {\n    const newColumns={...this.state.columns}\n    newColumns[col].title=title;\n    this.setState({columns:newColumns})\n    toast.success(\"Column Title Updated!\")\n  }\n  displayContext(display, contextId, xPos, yPos){\n    this.setState({\n      displayContext:{\n        display: display,\n        contextId: contextId,\n        pos: {\n          xPos: xPos,\n          yPos: yPos\n        }\n      }\n    })\n  }\n\n\n  componentDidUpdate(prevState){\n    if(this.state !== prevState){\n      const appState = JSON.stringify(this.state)\n      localStorage.savedState= appState\n    }\n  }\n\n  displayTaskDetails(bool, taskId){\n    const newTaskDetails = {\n      display: bool,\n      taskId: taskId\n    }\n    this.setState({taskDetails: newTaskDetails})\n  }\n\n  deleteTask(id){\n    const newTasks = JSON.parse(JSON.stringify(this.state.tasks))\n    delete newTasks[id];\n    const newColumns = JSON.parse(JSON.stringify(this.state.columns))\n    for(let column in newColumns){\n      const deleteIndex = newColumns[column].taskIds.findIndex((taskId)=>taskId===id)\n      if(deleteIndex>=0){\n        newColumns[column].taskIds.splice(deleteIndex,1)\n        break;\n      }\n    }\n    this.setState({ tasks: newTasks, columns: newColumns }, () => toast.error(\"Task Deleted :(\"))\n  }\n\n  moveTasksColumn(originId, targetId) {\n    const newColumns = JSON.parse(JSON.stringify(this.state.columns))\n    const ToMoveTasks = newColumns[originId].taskIds\n    newColumns[originId].taskIds = [];\n    const targetTasks = newColumns[targetId].taskIds.concat(ToMoveTasks)\n    newColumns[targetId].taskIds = targetTasks;\n    this.setState({ columns: newColumns })\n  }\n\n  componentDidMount(){\n    let savedState = localStorage.savedState\n    if(!savedState){\n      const state = JSON.stringify(this.state)\n      localStorage.savedState = state\n      return\n    } else {\n      savedState = JSON.parse(savedState)\n      this.setState({\n        taskSerial: savedState.taskSerial,\n        tasks: savedState.tasks,\n        columnSerial: savedState.columnSerial,\n        columns: savedState.columns,\n        columnOrder: savedState.columnOrder,\n        taskDetails: {display: false, taskId: null},\n        displayContext: {\n          display: false,\n          contextId: null,\n          pos: {}\n        }\n      })\n    }\n  }\n\n  onDragEnd = result => {\n    const {destination, source, draggableId, type} = result;\n\n    if(!destination){\n      return;\n    }\n\n    if(destination.droppableId === source.droppableId &&\n      destination.index === source.index\n      ) {\n        return;\n      }\n\n    if(type === 'column'){\n      const newColumnOrder = [...this.state.columnOrder]//Array.from(this.state.columnOrder)\n      newColumnOrder.splice(source.index, 1);\n      newColumnOrder.splice(destination.index, 0, draggableId)\n\n      this.setState({columnOrder: newColumnOrder})\n      return;\n    }\n\n    const startColumn = this.state.columns[source.droppableId];\n    const finishColumn = this.state.columns[destination.droppableId];\n    if(startColumn === finishColumn){ //if change is inside the same column\n      const newTaskIds = Array.from(startColumn.taskIds);\n      newTaskIds.splice(source.index,1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...startColumn,\n        taskIds: newTaskIds,\n      };\n\n      this.setState({\n        columns: {\n          ...this.state.columns,\n          [newColumn.id]: newColumn\n        }\n      });\n      return;\n    }\n\n  const startTaskIds = Array.from(startColumn.taskIds);\n  startTaskIds.splice(source.index,1);\n  const newStartColumn = {\n    ...startColumn,\n    taskIds:startTaskIds\n  };\n\n  const finishTaskIds = Array.from(finishColumn.taskIds);\n  finishTaskIds.splice(destination.index, 0, draggableId);\n    const newFinishColumn = {\n    ...finishColumn,\n    taskIds: finishTaskIds\n  };\n\n  const newState={\n  columns:{\n    ...this.state.columns,\n    [newStartColumn.id]: newStartColumn,\n    [newFinishColumn.id]: newFinishColumn\n  }\n}\n  this.setState(newState);\n}\n\n  addCard(column){\n    let taskSerial = this.state.taskSerial\n    const newTaskSerial = taskSerial + 1\n    const newTasks = JSON.parse(JSON.stringify(this.state.tasks))\n    newTasks.[`task-${taskSerial}`] = {\n      id: `task-${taskSerial}`,\n      title: `Click to edit New Card`,\n      content: \"\"\n    }\n    const newColumns = JSON.parse(JSON.stringify(this.state.columns))\n    newColumns[column].taskIds.unshift(`task-${taskSerial}`)\n    this.setState({\n      taskSerial: newTaskSerial,\n      tasks: newTasks,\n      columns: newColumns\n    }, () => toast.info(\"New Task Added!\"))\n\n  }\n\n\n  handleClick(e){\n    if(e.target.id === \"add-column\"){\n      this.addColumn()\n    }\n    let inContext = false\n    let node = e.target\n    while (node){\n      if(node.id === 'context'){\n        inContext = true\n        break\n      }\n      node = node.parentNode\n    }\n    if(!inContext){\n      this.setState({\n        displayContext: {\n          display: false,\n          contextId: null,\n          pos: {}\n        }\n      })\n    }\n  }\n\n  deleteColumn(id){\n    const newColumns = JSON.parse(JSON.stringify(this.state.columns))\n    const newTasks = JSON.parse(JSON.stringify(this.state.tasks))\n    const newColumnOrder=[...this.state.columnOrder]\n    const deleteOrderIndex= newColumnOrder.findIndex((col)=>col===id)\n    newColumnOrder.splice(deleteOrderIndex,1)\n    const deleteToTasks=newColumns[id].taskIds;\n    for(let i=0; i<deleteToTasks.length; i++){\n      delete newTasks[deleteToTasks[i]]\n    }\n    delete newColumns[id];\n    this.setState({\n      columns:newColumns,\n      tasks:newTasks,\n      columnOrder:newColumnOrder\n    }, () => toast.error(\"Column Deleted :(\"))\n\n  }\n\n  showDeleteColumn(){\n    if (!this.state.deleteColumnButton) {\n      toast.warn(\"Columns can now be deleted?!\");\n    }\n    this.setState(prevState=>{\n      return {deleteColumnButton:!prevState.deleteColumnButton}\n    })\n  }\n\n  addColumn(){\n    const columnSerial = this.state.columnSerial\n    const newColumnSerial = columnSerial + 1\n    const newColumns = JSON.parse(JSON.stringify(this.state.columns))\n    const newColumnOrder = this.state.columnOrder.splice(0)\n    newColumns[`column-${columnSerial}`] = {\n      id: `column-${columnSerial}`,\n      title: 'New Column',\n      taskIds: []\n    }\n    newColumnOrder.push(`column-${columnSerial}`)\n    this.setState({\n      columns: newColumns,\n      columnSerial: newColumnSerial,\n      columnOrder: newColumnOrder\n    }, () => toast.info(\"New Column Added!\"))\n\n  }\n\n  render(){\n\n    return (<>\n\n        <div className=\"app overflow-x\" onClick={this.handleClick}>\n          {this.state.displayContext.display ?\n            <ContextMenu\n              moveTasksColumn={this.moveTasksColumn}\n              displayContext={this.displayContext}\n              columns={this.state.columns}\n              pos={this.state.displayContext.pos}\n              id={this.state.displayContext.contextId}\n            /> :\n            <></>}\n          <header>\n\n            <nav className={`\n              navbar\n              navbar-light\n              nav-z\n              bg-dark\n              d-flex\n              navbar-horizontal-fixed\n              justify-content-between\n              align-items-center\n            `}\n            id=\"navbar\"\n            >\n              <h2 className=\"text-white navbar-brand\">Kanban</h2>\n              <div>\n              <h5 className=\"text-white navbar-brand\">Add New Column</h5>\n                <button\n                  className=\"btn btn-primary\"\n                  id=\"add-column\"\n                >\n                <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\n                </button>\n              <button className=\"btn btn-danger ml-3\" onClick={this.showDeleteColumn}><h5>Toggle Column Delete</h5></button>\n              </div>\n            </nav>\n            <div className=\"navbar-space\"></div>\n          </header>\n\n          {this.state.taskDetails.display &&\n          <TaskDetails\n            changeTaskData={this.changeTaskData}\n            displayTaskDetails={this.displayTaskDetails}\n            task={this.state.tasks[this.state.taskDetails.taskId]}\n            deleteTask={this.deleteTask}\n          /> }\n          <div className=\"p-3 app\">\n            <DragDropContext\n              onDragEnd={this.onDragEnd}\n            >\n              <Droppable\n                droppableId=\"all-columns\"\n                direction =\"horizontal\"\n                type=\"column\"\n              >\n                {provided => (\n                  <div\n                    className=\"row flex-nowrap\"\n                    {...provided.droppableProps}\n                    ref={provided.innerRef}\n                  >\n                    {this.state.columnOrder.map((columnId, index) =>{\n                      const column= this.state.columns[columnId];\n                      const tasks = column.taskIds.map(taskId => this.state.tasks[taskId]);\n\n                      return <Column\n                        displayContext={this.displayContext}\n                        addCard={this.addCard}\n                        key = {column.id}\n                        column = {column}\n                        tasks = {tasks}\n                        index = {index}\n                        displayTaskDetails= {this.displayTaskDetails}\n                        deleteColumn={this.deleteColumn}\n                        deleteColumnButton={this.state.deleteColumnButton}\n                        changeColumnTitle={this.changeColumnTitle}\n                        />\n                    })}\n                    {provided.placeholder}\n                  </div>)}\n            </Droppable>\n          </DragDropContext>\n          </div>\n        </div>\n      <ToastContainer autoClose={1500} position=\"bottom-right\" hideProgressBar={true} transition={Slide}/>\n</>\n\n    );\n}}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}