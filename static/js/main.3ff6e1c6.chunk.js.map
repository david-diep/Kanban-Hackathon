{"version":3,"sources":["components/task.jsx","components/column.jsx","components/task-details.jsx","App.js","serviceWorker.js","index.js"],"names":["Task","props","handleClick","bind","e","this","displayTaskDetails","task","id","draggableId","index","provided","snapshot","onClick","className","isDragging","draggableProps","dragHandleProps","ref","innerRef","title","React","Component","Column","deleteThisColumn","target","split","addCard","deleteColumn","column","aria-hidden","deleteColumnButton","droppableId","isDraggingOver","droppableProps","tasks","map","key","placeholder","TaskDetails","handleChange","state","content","closeModal","changeTaskData","value","setState","style","position","top","bottom","left","right","backgroundColor","opacity","zIndex","transform","tabIndex","type","onChange","App","onDragEnd","result","destination","source","newColumnOrder","columnOrder","splice","startColumn","columns","finishColumn","startTaskIds","Array","from","taskIds","newStartColumn","finishTaskIds","newFinishColumn","newState","newTaskIds","newColumn","addColumn","taskSerial","columnSerial","taskDetails","display","taskId","showDeleteColumn","newTasks","JSON","parse","stringify","newTask","prevState","appState","localStorage","savedState","bool","newTaskDetails","newTaskSerial","newColumns","unshift","deleteOrderIndex","findIndex","col","deleteTasks","i","length","newColumnSerial","push","direction","columnId","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3ff6e1c6.chunk.js","sourcesContent":["import React from 'react';\nimport {Draggable} from 'react-beautiful-dnd'\n\nclass Task extends React.Component {\n  constructor(props){\n    super(props);\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  handleClick(e){\n    this.props.displayTaskDetails(true, this.props.task.id)\n  }\n\n  render() {\n    return (\n      <Draggable draggableId={this.props.task.id} index={this.props.index}>\n        {(provided, snapshot) => (\n          <div\n            onClick={this.handleClick}\n            className={`\n              border\n              p-2\n              m-2\n              bg-light\n              card\n              ${snapshot.isDragging ? 'highlighted-task':''}`\n            }\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref = {provided.innerRef}\n          >\n            <div className=\"card-title\">\n              {this.props.task.title}\n            </div>\n          </div>\n        )}\n      </Draggable>\n    )}\n\n}\n\nexport default Task;\n","import React from 'react';\nimport Task from './task';\nimport {Droppable, Draggable} from 'react-beautiful-dnd'\n\nclass Column extends React.Component {\n  constructor(props){\n    super(props)\n    this.handleClick = this.handleClick.bind(this)\n    this.deleteThisColumn=this.deleteThisColumn.bind(this)\n  }\n\n  handleClick(e){\n    const id = e.target.id\n    const splitId = id.split('-')\n    if(splitId[0] === \"column\"){\n      this.props.addCard(id)\n    }\n  }\n\n  deleteThisColumn(){\n    this.props.deleteColumn(this.props.column.id)\n  }\n\n  render() {\n    return (\n      <Draggable draggableId={this.props.column.id} index={this.props.index}>\n        {(provided, snapshot) => (\n          <div\n            className={`\n              col-min\n              card\n              h-80\n              w-25\n              m-1\n              ${snapshot.isDragging ? 'highlighted-task' : ''}\n            `}\n            ref = {provided.innerRef}\n            {...provided.draggableProps}\n            >\n          <div className=\"w-100 border-bottom d-flex justify-content-between\"\n            {...provided.dragHandleProps}>\n            <h3 className=\"pt-2 pl-2\">{this.props.column.title}</h3>\n            <div className={`m-2`}>\n              <button\n                id={this.props.column.id}\n                className={`btn btn-primary`}\n                onClick={this.handleClick}\n              >\n              <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\n               </button>\n                {this.props.deleteColumnButton &&\n                <button\n                className=\"btn btn-outline-danger ml-2\"\n                onClick={this.deleteThisColumn}>\n                  <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                </button>}\n            </div>\n          </div>\n          <Droppable droppableId={this.props.column.id}>\n            {(provided, snapshot)=>(\n              <div\n                className={`\n                  tasklist\n                  h-90\n                  p-1\n                  ${snapshot.isDraggingOver ? 'bg-info':''}\n                `}\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                >\n                {this.props.tasks.map((task, index) => (\n                <Task\n                key={task.id}\n                task={task}\n                index={index}\n                displayTaskDetails={this.props.displayTaskDetails}\n                />\n                ))}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </div>)}\n      </Draggable>\n    );\n  }\n}\n\nexport default Column;\n","import React from 'react'\n\nexport default class TaskDetails extends React.Component{\n  constructor(props){\n    super(props)\n    this.handleClick= this.handleClick.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.state = {\n      title: this.props.task.title,\n      content: this.props.task.content\n    }\n  }\n\n  handleClick(e){\n    if(e.target.id === 'overlay'){\n      this.closeModal()\n    }\n    if(e.target.id === 'save'){\n      this.props.changeTaskData(this.props.task.id, this.state.title, this.state.content)\n      this.closeModal()\n    }\n  }\n\n  closeModal(){\n    this.props.displayTaskDetails(false, null)\n  }\n\n  handleChange(e){\n    const id = e.target.id\n    const value = e.target.value\n    this.setState({\n      [id]: value\n    })\n  }\n\n  render(){\n    return(\n      <div>\n        <div\n        id=\"overlay\"\n        onClick={this.handleClick}\n        style={{\n          position: 'fixed',\n          top: 0,\n          bottom: 0,\n          left: 0,\n          right: 0,\n          backgroundColor: 'black',\n          opacity: 0.5,\n          zIndex: 99\n        }}\n        >\n        </div>\n        <div style={{\n          position: 'fixed',\n          zIndex: 100,\n          top: '50%',\n          left: '50%',\n          right: '50%',\n          transform: 'translate(-50%, -50%)'\n        }}\n          className=\"card w-75\"\n          tabIndex=\"0\">\n          <div className=\"card-body\">\n              <input\n              type=\"text\"\n              id=\"title\"\n              className=\"form-control-lg\"\n              value={this.state.title}\n              onChange={this.handleChange}/>\n              <textarea\n                className=\"form-control text-dark\"\n                value={this.state.content}\n                placeholder=\"Type here to add a description\"\n                onChange={this.handleChange}\n                id=\"content\"\n              />\n              <button\n                id=\"save\"\n                onClick={this.handleClick}\n                className=\"btn btn-primary\"\n              >\n                Save\n              </button>\n          </div>\n        </div>\n      </div>\n      )\n  }\n\n}\n","import React from 'react';\nimport Column from './components/column'\nimport {DragDropContext, Droppable} from 'react-beautiful-dnd'\nimport TaskDetails from './components/task-details'\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.addCard = this.addCard.bind(this)\n    this.addColumn = this.addColumn.bind(this)\n    this.handleClick = this.handleClick.bind(this)\n    this.displayTaskDetails = this.displayTaskDetails.bind(this)\n    this.state={\n      taskSerial: 5,\n      tasks:{\n        'task-1': { id: 'task-1', title:\"Take out the garbage.\", content:\"\"},\n        'task-2': { id: 'task-2', title: \"Charge my phone.\", content: \"\" },\n        'task-3': { id: 'task-3', title: \"Complete the hackathon.\", content: \"\" },\n        'task-4': { id: 'task-4', title: \"Complete the hackathon.\", content: \"\" }\n      },\n      columnSerial: 4,\n      columns:{\n        'column-1':{\n          id: 'column-1',\n          title:\"To Do\",\n          taskIds: ['task-1','task-2','task-3','task-4']\n        },\n        'column-2': {\n          id: 'column-2',\n          title: \"In Progress\",\n          taskIds: []\n        },\n        'column-3': {\n          id: 'column-3',\n          title: \"Done\",\n          taskIds: []\n        }\n      },\n      columnOrder: ['column-1', 'column-2', 'column-3'],\n      taskDetails:{\n        display: false,\n        taskId: null\n      },\n      deleteColumnButton: false\n    }\n\n    this.changeTaskData=this.changeTaskData.bind(this);\n    this.showDeleteColumn=this.showDeleteColumn.bind(this)\n    this.deleteColumn=this.deleteColumn.bind(this)\n  }\n\n  changeTaskData(id, title, content){\n    const newTasks = JSON.parse(JSON.stringify(this.state.tasks))\n    const newTask = { id: id, title: title, content: content}\n    newTasks[id]=newTask;\n    this.setState({tasks:newTasks})\n  }\n\n  componentDidUpdate(prevState){\n    if(this.state !== prevState){\n      const appState = JSON.stringify(this.state)\n      localStorage.savedState= appState\n    }\n  }\n\n  displayTaskDetails(bool, taskId){\n    const newTaskDetails = {\n      display: bool,\n      taskId: taskId\n    }\n    this.setState({taskDetails: newTaskDetails})\n  }\n\n  componentDidMount(){\n    let savedState = localStorage.savedState\n    if(!savedState){\n      const state = JSON.stringify(this.state)\n      localStorage.savedState = state\n      return\n    } else {\n      savedState = JSON.parse(savedState)\n      this.setState({\n        taskSerial: savedState.taskSerial,\n        tasks: savedState.tasks,\n        columnSerial: savedState.columnSerial,\n        columns: savedState.columns,\n        columnOrder: savedState.columnOrder,\n        taskDetails: {display: false, taskId: null}\n      })\n    }\n  }\n\n  onDragEnd = result => {\n    const {destination, source, draggableId, type} = result;\n\n    if(!destination){\n      return;\n    }\n\n    if(destination.droppableId === source.droppableId &&\n      destination.index === source.index\n      ) {\n        return;\n      }\n\n    if(type === 'column'){\n      const newColumnOrder = [...this.state.columnOrder]//Array.from(this.state.columnOrder)\n      newColumnOrder.splice(source.index, 1);\n      newColumnOrder.splice(destination.index, 0, draggableId)\n\n      this.setState({columnOrder: newColumnOrder})\n      return;\n    }\n\n    const startColumn = this.state.columns[source.droppableId];\n    const finishColumn = this.state.columns[destination.droppableId];\n    if(startColumn === finishColumn){ //if change is inside the same column\n      const newTaskIds = Array.from(startColumn.taskIds);\n      newTaskIds.splice(source.index,1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...startColumn,\n        taskIds: newTaskIds,\n      };\n\n      this.setState({\n        columns: {\n          ...this.state.columns,\n          [newColumn.id]: newColumn\n        }\n      });\n      return;\n    }\n\n  const startTaskIds = Array.from(startColumn.taskIds);\n  startTaskIds.splice(source.index,1);\n  const newStartColumn = {\n    ...startColumn,\n    taskIds:startTaskIds\n  };\n\n  const finishTaskIds = Array.from(finishColumn.taskIds);\n  finishTaskIds.splice(destination.index, 0, draggableId);\n    const newFinishColumn = {\n    ...finishColumn,\n    taskIds: finishTaskIds\n  };\n\n  const newState={\n  columns:{\n    ...this.state.columns,\n    [newStartColumn.id]: newStartColumn,\n    [newFinishColumn.id]: newFinishColumn\n  }\n}\n  this.setState(newState);\n}\n\n  addCard(column){\n    let taskSerial = this.state.taskSerial\n    const newTaskSerial = taskSerial + 1\n    const newTasks = JSON.parse(JSON.stringify(this.state.tasks))\n    newTasks.[`task-${taskSerial}`] = {\n      id: `task-${taskSerial}`,\n      title: `Click to edit New Card`,\n      content: \"\"\n    }\n    const newColumns = JSON.parse(JSON.stringify(this.state.columns))\n    newColumns[column].taskIds.unshift(`task-${taskSerial}`)\n    this.setState({\n      taskSerial: newTaskSerial,\n      tasks: newTasks,\n      columns: newColumns\n    })\n  }\n\n  handleClick(e){\n    if(e.target.id === \"add-column\"){\n      this.addColumn()\n    }\n  }\n\n  deleteColumn(id){\n    const newColumns={...this.state.columns}\n    const newTasks={...this.state.tasks}\n    const newColumnOrder=[...this.state.columnOrder]\n    const deleteOrderIndex= newColumnOrder.findIndex((col)=>col===id)\n    newColumnOrder.splice(deleteOrderIndex,1)\n    const deleteTasks=newColumns[id].taskIds;\n    for(let i=0; i<deleteTasks.length; i++){\n      delete newTasks[deleteTasks[i]]\n    }\n    delete newColumns[id];\n    this.setState({columns:newColumns,tasks:newTasks,columnOrder:newColumnOrder})\n  }\n\n  showDeleteColumn(){\n    this.setState(prevState=>{return {deleteColumnButton:!prevState.deleteColumnButton}})\n  }\n\n  addColumn(){\n    const columnSerial = this.state.columnSerial\n    const newColumnSerial = columnSerial + 1\n    const newColumns = JSON.parse(JSON.stringify(this.state.columns))\n    const newColumnOrder = this.state.columnOrder.splice(0)\n    newColumns[`column-${columnSerial}`] = {\n      id: `column-${columnSerial}`,\n      title: 'New Column',\n      taskIds: []\n    }\n    newColumnOrder.push(`column-${columnSerial}`)\n    this.setState({\n      columns: newColumns,\n      columnSerial: newColumnSerial,\n      columnOrder: newColumnOrder\n    })\n  }\n\n  render(){\n\n    return (\n        <div className=\"app overflow-x\">\n          <header>\n            <nav className={`\n              navbar\n              navbar-light\n              nav-z\n              bg-dark\n              d-flex\n              navbar-horizontal-fixed\n              justify-content-between\n              align-items-center\n            `}\n            id=\"navbar\"\n            >\n              <h2 className=\"text-white navbar-brand\">Kanban</h2>\n              <div>\n                <h5 className=\"text-white navbar-brand\">Add New Column</h5>\n                <button\n                  onClick={this.handleClick}\n                  className=\"btn btn-primary\"\n                  id=\"add-column\"\n                >\n                <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\n                </button>\n              <button className=\"btn btn-danger ml-3\" onClick={this.showDeleteColumn}><h5>Toggle Column Delete</h5></button>\n              </div>\n            </nav>\n            {/* this is hacky and should be replaced with a better solution */}\n            <div className=\"navbar-space\"></div>\n          </header>\n          {this.state.taskDetails.display ?\n          <TaskDetails\n            changeTaskData={this.changeTaskData}\n            displayTaskDetails={this.displayTaskDetails}\n            task={this.state.tasks[this.state.taskDetails.taskId]}\n          /> :\n          <></>}\n          <div className=\"p-3 app\">\n            <DragDropContext\n              onDragEnd={this.onDragEnd}\n            >\n              <Droppable\n                droppableId=\"all-columns\"\n                direction =\"horizontal\"\n                type=\"column\"\n              >\n                {provided => (\n                  <div\n                    className=\"row flex-nowrap\"\n                    {...provided.droppableProps}\n                    ref={provided.innerRef}\n                  >\n                    {this.state.columnOrder.map((columnId, index) =>{\n                      const column= this.state.columns[columnId];\n                      const tasks = column.taskIds.map(taskId => this.state.tasks[taskId]);\n\n                      return <Column\n                        addCard={this.addCard}\n                        key = {column.id}\n                        column = {column}\n                        tasks = {tasks}\n                        index = {index}\n                        displayTaskDetails= {this.displayTaskDetails}\n                        deleteColumn={this.deleteColumn}\n                        deleteColumnButton={this.state.deleteColumnButton}\n                        />\n                    })}\n                  </div>)}\n            </Droppable>\n          </DragDropContext>\n          </div>\n        </div>\n\n\n    );\n}}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}